{"ast":null,"code":"var _jsxFileName = \"/home/zoe/Desktop/Netflix/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieRecommendation from '../components/MovieRecommendation';\nimport TrailerModal from '../components/TrailerModal'; // import modal here\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  title: \"Trending\",\n  query: \"trending\"\n}, {\n  title: \"Marvel\",\n  query: \"marvel\"\n}, {\n  title: \"Harry Potter\",\n  query: \"harry potter\"\n}, {\n  title: \"Star Wars\",\n  query: \"star wars\"\n}, {\n  title: \"Top Rated\",\n  query: \"top rated\"\n}];\nconst Home = () => {\n  _s();\n  const [movieData, setMovieData] = useState({});\n  const [recommendations, setRecommendations] = useState([]);\n  const [currentRecIndex, setCurrentRecIndex] = useState(0);\n\n  // Modal state\n  const [isTrailerOpen, setIsTrailerOpen] = useState(false);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const newData = {};\n      const trendingRes = await axios.get('https://search.imdbot.workers.dev/?q=trending');\n      setRecommendations(trendingRes.data.description.slice(0, 5)); // top 5 recs\n\n      for (const category of categories) {\n        try {\n          const res = await axios.get(`https://search.imdbot.workers.dev/?q=${category.query}`);\n          newData[category.title] = res.data.description || [];\n        } catch (err) {\n          console.error(`Error fetching ${category.title}`, err);\n          newData[category.title] = [];\n        }\n      }\n      setMovieData(newData);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentRecIndex(prev => (prev + 1) % recommendations.length);\n    }, 10000); // every 10 seconds\n    return () => clearInterval(interval);\n  }, [recommendations]);\n  const currentMovie = recommendations[currentRecIndex];\n\n  // Handler to open trailer modal with given url\n  const openTrailer = url => {\n    setTrailerUrl(url);\n    setIsTrailerOpen(true);\n  };\n\n  // Handler to close trailer modal\n  const closeTrailer = () => {\n    setTrailerUrl(\"\");\n    setIsTrailerOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(MovieRecommendation, {\n      movie: currentMovie,\n      onPlayTrailer: () => openTrailer((currentMovie === null || currentMovie === void 0 ? void 0 : currentMovie.trailerUrl) || \"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), Object.keys(movieData).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"category-title\",\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        children: movieData[category].map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie[\"#IMG_POSTER\"] || \"https://via.placeholder.com/160x240\",\n            alt: movie[\"#TITLE\"],\n            className: \"movie-image\",\n            onClick: () => openTrailer((movie === null || movie === void 0 ? void 0 : movie.trailerUrl) || \"\") // example: play trailer on click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-title\",\n              children: movie[\"#TITLE\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-year\",\n              children: movie[\"#YEAR\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)), isTrailerOpen && /*#__PURE__*/_jsxDEV(TrailerModal, {\n      url: trailerUrl,\n      onClose: closeTrailer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"gIqmwUtENUYYcC0L4e65/dIMQlo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieRecommendation","TrailerModal","jsxDEV","_jsxDEV","categories","title","query","Home","_s","movieData","setMovieData","recommendations","setRecommendations","currentRecIndex","setCurrentRecIndex","isTrailerOpen","setIsTrailerOpen","trailerUrl","setTrailerUrl","fetchData","newData","trendingRes","get","data","description","slice","category","res","err","console","error","interval","setInterval","prev","length","clearInterval","currentMovie","openTrailer","url","closeTrailer","className","children","movie","onPlayTrailer","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","src","alt","onClick","onClose","_c","$RefreshReg$"],"sources":["/home/zoe/Desktop/Netflix/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MovieRecommendation from '../components/MovieRecommendation';\nimport TrailerModal from '../components/TrailerModal';  // import modal here\nimport '../styles/Home.css';\n\nconst categories = [\n  { title: \"Trending\", query: \"trending\" },\n  { title: \"Marvel\", query: \"marvel\" },\n  { title: \"Harry Potter\", query: \"harry potter\" },\n  { title: \"Star Wars\", query: \"star wars\" },\n  { title: \"Top Rated\", query: \"top rated\" },\n];\n\nconst Home = () => {\n  const [movieData, setMovieData] = useState({});\n  const [recommendations, setRecommendations] = useState([]);\n  const [currentRecIndex, setCurrentRecIndex] = useState(0);\n\n  // Modal state\n  const [isTrailerOpen, setIsTrailerOpen] = useState(false);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const newData = {};\n      const trendingRes = await axios.get('https://search.imdbot.workers.dev/?q=trending');\n      setRecommendations(trendingRes.data.description.slice(0, 5)); // top 5 recs\n\n      for (const category of categories) {\n        try {\n          const res = await axios.get(`https://search.imdbot.workers.dev/?q=${category.query}`);\n          newData[category.title] = res.data.description || [];\n        } catch (err) {\n          console.error(`Error fetching ${category.title}`, err);\n          newData[category.title] = [];\n        }\n      }\n      setMovieData(newData);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentRecIndex((prev) => (prev + 1) % recommendations.length);\n    }, 10000); // every 10 seconds\n    return () => clearInterval(interval);\n  }, [recommendations]);\n\n  const currentMovie = recommendations[currentRecIndex];\n\n  // Handler to open trailer modal with given url\n  const openTrailer = (url) => {\n    setTrailerUrl(url);\n    setIsTrailerOpen(true);\n  };\n\n  // Handler to close trailer modal\n  const closeTrailer = () => {\n    setTrailerUrl(\"\");\n    setIsTrailerOpen(false);\n  };\n\n  return (\n    <div className=\"home-container\">\n      <MovieRecommendation \n        movie={currentMovie} \n        onPlayTrailer={() => openTrailer(currentMovie?.trailerUrl || \"\")} \n      />\n      \n      {Object.keys(movieData).map((category) => (\n        <div key={category} className=\"category-row\">\n          <h2 className=\"category-title\">{category}</h2>\n          <div className=\"movie-row\">\n            {movieData[category].map((movie, index) => (\n              <div key={index} className=\"movie-card\">\n                <img\n                  src={movie[\"#IMG_POSTER\"] || \"https://via.placeholder.com/160x240\"}\n                  alt={movie[\"#TITLE\"]}\n                  className=\"movie-image\"\n                  onClick={() => openTrailer(movie?.trailerUrl || \"\")} // example: play trailer on click\n                />\n                <div className=\"movie-info\">\n                  <p className=\"movie-title\">{movie[\"#TITLE\"]}</p>\n                  <p className=\"movie-year\">{movie[\"#YEAR\"]}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n\n      {/* Trailer Modal */}\n      {isTrailerOpen && <TrailerModal url={trailerUrl} onClose={closeTrailer} />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}