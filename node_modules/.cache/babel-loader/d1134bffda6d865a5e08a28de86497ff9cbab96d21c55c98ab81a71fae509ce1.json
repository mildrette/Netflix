{"ast":null,"code":"var _jsxFileName = \"/home/zoe/Desktop/Netflix/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtered, setFiltered] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch some initial movies on load\n    const fetchMovies = async () => {\n      try {\n        const res = await axios.get('https://imdbapi.dev/api/movies?limit=20');\n        // NOTE: Replace with actual API endpoint & params from imdbapi.dev docs\n        setMovies(res.data.results || res.data);\n        setFiltered(res.data.results || res.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  useEffect(() => {\n    if (!searchTerm) {\n      setFiltered(movies);\n    } else {\n      const filteredMovies = movies.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFiltered(filteredMovies);\n    }\n  }, [searchTerm, movies]);\n  const goToDetails = id => {\n    navigate(`/movie/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white',\n        marginBottom: 20\n      },\n      children: \"Welcome to Netflix Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search movies...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: styles.searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.grid,\n      children: filtered.length > 0 ? filtered.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        onClick: () => goToDetails(movie.id || movie.imdb_id || movie._id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster || movie.image || movie.posterurl // adapt based on API\n          ,\n          alt: movie.title,\n          style: styles.poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.title,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, movie.id || movie.imdb_id || movie._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"yvUZbryMfYRKbI+LLZoFLbKaN/8=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nconst styles = {\n  container: {\n    backgroundColor: '#141414',\n    minHeight: '100vh',\n    padding: 20\n  },\n  searchInput: {\n    width: '100%',\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 6,\n    border: 'none',\n    marginBottom: 30,\n    outline: 'none'\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(160px, 1fr))',\n    gap: 20\n  },\n  card: {\n    cursor: 'pointer',\n    borderRadius: 8,\n    overflow: 'hidden',\n    backgroundColor: '#222',\n    transition: 'transform 0.2s ease'\n  },\n  poster: {\n    width: '100%',\n    display: 'block'\n  },\n  title: {\n    color: 'white',\n    padding: 10,\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center'\n  }\n};\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","searchTerm","setSearchTerm","filtered","setFiltered","navigate","fetchMovies","res","get","data","results","error","console","filteredMovies","filter","movie","title","toLowerCase","includes","goToDetails","id","style","styles","container","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","searchInput","grid","length","map","card","onClick","imdb_id","_id","src","poster","image","posterurl","alt","_c","backgroundColor","minHeight","padding","width","fontSize","borderRadius","border","outline","display","gridTemplateColumns","gap","cursor","overflow","transition","fontWeight","textAlign","$RefreshReg$"],"sources":["/home/zoe/Desktop/Netflix/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filtered, setFiltered] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch some initial movies on load\n    const fetchMovies = async () => {\n      try {\n        const res = await axios.get('https://imdbapi.dev/api/movies?limit=20'); \n        // NOTE: Replace with actual API endpoint & params from imdbapi.dev docs\n        setMovies(res.data.results || res.data); \n        setFiltered(res.data.results || res.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  useEffect(() => {\n    if (!searchTerm) {\n      setFiltered(movies);\n    } else {\n      const filteredMovies = movies.filter(movie =>\n        movie.title.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFiltered(filteredMovies);\n    }\n  }, [searchTerm, movies]);\n\n  const goToDetails = (id) => {\n    navigate(`/movie/${id}`);\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={{ color: 'white', marginBottom: 20 }}>Welcome to Netflix Clone</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search movies...\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n        style={styles.searchInput}\n      />\n\n      <div style={styles.grid}>\n        {filtered.length > 0 ? (\n          filtered.map(movie => (\n            <div\n              key={movie.id || movie.imdb_id || movie._id}\n              style={styles.card}\n              onClick={() => goToDetails(movie.id || movie.imdb_id || movie._id)}\n            >\n              <img\n                src={movie.poster || movie.image || movie.posterurl} // adapt based on API\n                alt={movie.title}\n                style={styles.poster}\n              />\n              <div style={styles.title}>{movie.title}</div>\n            </div>\n          ))\n        ) : (\n          <p style={{ color: 'white' }}>No movies found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    backgroundColor: '#141414',\n    minHeight: '100vh',\n    padding: 20,\n  },\n  searchInput: {\n    width: '100%',\n    padding: 10,\n    fontSize: 18,\n    borderRadius: 6,\n    border: 'none',\n    marginBottom: 30,\n    outline: 'none',\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(160px, 1fr))',\n    gap: 20,\n  },\n  card: {\n    cursor: 'pointer',\n    borderRadius: 8,\n    overflow: 'hidden',\n    backgroundColor: '#222',\n    transition: 'transform 0.2s ease',\n  },\n  poster: {\n    width: '100%',\n    display: 'block',\n  },\n  title: {\n    color: 'white',\n    padding: 10,\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,yCAAyC,CAAC;QACtE;QACAR,SAAS,CAACO,GAAG,CAACE,IAAI,CAACC,OAAO,IAAIH,GAAG,CAACE,IAAI,CAAC;QACvCL,WAAW,CAACG,GAAG,CAACE,IAAI,CAACC,OAAO,IAAIH,GAAG,CAACE,IAAI,CAAC;MAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IACDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,UAAU,EAAE;MACfG,WAAW,CAACL,MAAM,CAAC;IACrB,CAAC,MAAM;MACL,MAAMc,cAAc,GAAGd,MAAM,CAACe,MAAM,CAACC,KAAK,IACxCA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,UAAU,CAACgB,WAAW,CAAC,CAAC,CAC7D,CAAC;MACDb,WAAW,CAACS,cAAc,CAAC;IAC7B;EACF,CAAC,EAAE,CAACZ,UAAU,EAAEF,MAAM,CAAC,CAAC;EAExB,MAAMoB,WAAW,GAAIC,EAAE,IAAK;IAC1Bf,QAAQ,CAAC,UAAUe,EAAE,EAAE,CAAC;EAC1B,CAAC;EAED,oBACExB,OAAA;IAAKyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3B5B,OAAA;MAAIyB,KAAK,EAAE;QAAEI,KAAK,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAwB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9ElC,OAAA;MACEmC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEhC,UAAW;MAClBiC,QAAQ,EAAEC,CAAC,IAAIjC,aAAa,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CZ,KAAK,EAAEC,MAAM,CAACe;IAAY;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEFlC,OAAA;MAAKyB,KAAK,EAAEC,MAAM,CAACgB,IAAK;MAAAd,QAAA,EACrBrB,QAAQ,CAACoC,MAAM,GAAG,CAAC,GAClBpC,QAAQ,CAACqC,GAAG,CAACzB,KAAK,iBAChBnB,OAAA;QAEEyB,KAAK,EAAEC,MAAM,CAACmB,IAAK;QACnBC,OAAO,EAAEA,CAAA,KAAMvB,WAAW,CAACJ,KAAK,CAACK,EAAE,IAAIL,KAAK,CAAC4B,OAAO,IAAI5B,KAAK,CAAC6B,GAAG,CAAE;QAAApB,QAAA,gBAEnE5B,OAAA;UACEiD,GAAG,EAAE9B,KAAK,CAAC+B,MAAM,IAAI/B,KAAK,CAACgC,KAAK,IAAIhC,KAAK,CAACiC,SAAU,CAAC;UAAA;UACrDC,GAAG,EAAElC,KAAK,CAACC,KAAM;UACjBK,KAAK,EAAEC,MAAM,CAACwB;QAAO;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC,eACFlC,OAAA;UAAKyB,KAAK,EAAEC,MAAM,CAACN,KAAM;UAAAQ,QAAA,EAAET,KAAK,CAACC;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GATxCf,KAAK,CAACK,EAAE,IAAIL,KAAK,CAAC4B,OAAO,IAAI5B,KAAK,CAAC6B,GAAG;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUxC,CACN,CAAC,gBAEFlC,OAAA;QAAGyB,KAAK,EAAE;UAAEI,KAAK,EAAE;QAAQ,CAAE;QAAAD,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAClD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CArEID,IAAI;EAAA,QAISH,WAAW;AAAA;AAAAwD,EAAA,GAJxBrD,IAAI;AAuEV,MAAMyB,MAAM,GAAG;EACbC,SAAS,EAAE;IACT4B,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,OAAO;IAClBC,OAAO,EAAE;EACX,CAAC;EACDhB,WAAW,EAAE;IACXiB,KAAK,EAAE,MAAM;IACbD,OAAO,EAAE,EAAE;IACXE,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfC,MAAM,EAAE,MAAM;IACd/B,YAAY,EAAE,EAAE;IAChBgC,OAAO,EAAE;EACX,CAAC;EACDpB,IAAI,EAAE;IACJqB,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,uCAAuC;IAC5DC,GAAG,EAAE;EACP,CAAC;EACDpB,IAAI,EAAE;IACJqB,MAAM,EAAE,SAAS;IACjBN,YAAY,EAAE,CAAC;IACfO,QAAQ,EAAE,QAAQ;IAClBZ,eAAe,EAAE,MAAM;IACvBa,UAAU,EAAE;EACd,CAAC;EACDlB,MAAM,EAAE;IACNQ,KAAK,EAAE,MAAM;IACbK,OAAO,EAAE;EACX,CAAC;EACD3C,KAAK,EAAE;IACLS,KAAK,EAAE,OAAO;IACd4B,OAAO,EAAE,EAAE;IACXY,UAAU,EAAE,MAAM;IAClBV,QAAQ,EAAE,EAAE;IACZW,SAAS,EAAE;EACb;AACF,CAAC;AAED,eAAerE,IAAI;AAAC,IAAAqD,EAAA;AAAAiB,YAAA,CAAAjB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}